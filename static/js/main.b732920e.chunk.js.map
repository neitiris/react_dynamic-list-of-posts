{"version":3,"sources":["propTypes.js","api/api.js","components/User.js","components/Comment.js","components/CommentsList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["propTypes","state","users","shape","id","number","name","string","username","email","address","street","suite","city","phone","website","company","todos","userId","title","completed","boolean","baseUrl","getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","posts","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getComments","_ref3","_callee3","comments","_context3","User","user","react_default","createElement","Fragment","CommentComponent","commentData","key","body","CommentsList","props","comment","map","commentItem","Comment","Math","random","Post","openComments","handleCommentClick","_this","setState","previousState","postData","className","components_User","components_CommentsList","commentsList","length","type","onClick","React","Component","PostsList","currentPost","components_Post","App","isLoaded","isLoading","query","handleClick","loadData","then","handleChange","event","target","value","search","preventDefault","filter","post","includes","userData","_this2","commentsData","postsData","objectSpread","find","postId","onSubmit","onChange","PostList","disabled","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b732920e.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\npropTypes.state = {\n  users: propTypes.shape({\n    id: propTypes.number,\n    name: propTypes.string,\n    username: propTypes.string,\n    email: propTypes.string,\n    address: propTypes.shape({\n      street: propTypes.string,\n      suite: propTypes.string,\n      city: propTypes.string,\n    }),\n    phone: propTypes.string,\n    website: propTypes.string,\n    company: propTypes.shape({\n      name: propTypes.string,\n    }),\n  }),\n  todos: propTypes.shape({\n    userId: propTypes.number,\n    id: propTypes.number,\n    title: propTypes.string,\n    completed: propTypes.boolean,\n  }),\n};\n\nexport default propTypes;\n","const baseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = async() => {\n  const url = '/posts';\n  const response = await fetch(`${baseUrl}${url}`);\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport const getUsers = async() => {\n  const url = '/users';\n  const response = await fetch(`${baseUrl}${url}`);\n  const users = await response.json();\n\n  return users;\n};\n\nexport const getComments = async() => {\n  const url = '/comments';\n  const response = await fetch(`${baseUrl}${url}`);\n  const comments = await response.json();\n\n  return comments;\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <>\n      <p>{user.name}</p>\n      <p>{user.email}</p>\n      <p>\n        {`${user.address.city\n        } ${user.address.street\n        } ${user.address.suite}`}\n      </p>\n    </>\n  );\n}\n\nUser.propTypes = {\n  user: propTypes.shape({\n    name: propTypes.string,\n    email: propTypes.string,\n    address: ({\n      city: propTypes.string,\n      street: propTypes.string,\n      suite: propTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst CommentComponent = ({ commentData }) => (\n  <li key={commentData.id}>\n    <h3>{commentData.name}</h3>\n    <p>{commentData.body}</p>\n    <p>{commentData.email}</p>\n  </li>\n);\n\nCommentComponent.propTypes = {\n  commentData: propTypes.shape({\n    id: propTypes.number,\n    name: propTypes.string,\n    body: propTypes.string,\n    email: propTypes.string,\n  }).isRequired,\n};\nexport default CommentComponent;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentsList = props => (\n  <ul key=\"comments_list\">\n    {props.comment.map(commentItem => (\n      <Comment\n        key={`comment_${Math.random() * 5}`}\n        commentData={commentItem}\n      />\n    ))}\n  </ul>\n);\n\nCommentsList.propTypes = {\n  comment: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentsList';\n\nclass Post extends React.Component {\n  state = {\n    openComments: false,\n  };\n\n  handleCommentClick = () => {\n    this.setState(previousState => (\n      {\n        openComments: previousState.openComments === false,\n      }\n    ));\n  };\n\n  render() {\n    const { postData } = this.props;\n\n    return (\n      <li\n        key={`post_${postData.id}`}\n        className=\"post_item\"\n      >\n        <h3>{postData.title}</h3>\n        <p>{postData.body}</p>\n        <User user={postData.user} />\n        {\n          this.state.openComments ? (\n            <CommentList\n              comment={postData.commentsList}\n            />\n          ) : ``\n        }\n        <div>\n          <span>\n            {postData.commentsList.length}\n            {` comments : `}\n          </span>\n          <button\n            type=\"button\"\n            onClick={this.handleCommentClick}\n          >\n            {this.state.openComments ? 'close' : 'open'}\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nPost.propTypes = {\n  postData: propTypes.shape({\n    title: propTypes.string,\n    body: propTypes.string,\n    user: propTypes.shape({}),\n    commentsList: propTypes.array,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostsList = props => (\n  <ul\n    key=\"post_list\"\n    className=\"post_list\"\n  >\n    {props.posts.map(currentPost => (\n      <Post\n        key={`post_${currentPost.id}`}\n        postData={currentPost}\n      />\n    ))}\n  </ul>\n);\n\nPostsList.propTypes = {\n  posts: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default PostsList;\n","import React from 'react';\nimport './App.css';\nimport propTypes from './propTypes';\nimport { getPosts, getUsers, getComments } from './api/api';\nimport PostsList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    // sortedPostsList: this.posts,\n    users: [],\n    comments: [],\n    isLoaded: false,\n    isLoading: false,\n    query: '',\n  };\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    this.loadData()\n      .then(() => {\n        this.setState({\n          isLoaded: true,\n          isLoading: false,\n        });\n      });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  search = (event) => {\n    event.preventDefault();\n    this.setState(previousState => ({\n      posts: previousState.posts\n        .filter(post => post.body.includes(previousState.query)),\n    }));\n  };\n\n  async loadData() {\n    await getUsers()\n      .then((userData) => {\n        this.setState(\n          { users: userData },\n        );\n      });\n    await getComments()\n      .then((commentsData) => {\n        this.setState(\n          { comments: commentsData },\n        );\n      });\n    await getPosts()\n      .then((postsData) => {\n        this.setState(previousState => (\n          {\n            posts: postsData.map(post => ({\n              ...post,\n              user: previousState.users.find(user => user.id === post.userId),\n              commentsList: previousState.comments\n                .filter(comment => comment.postId === post.userId),\n            })),\n          }\n        ));\n      });\n  }\n\n  render() {\n    return (\n      <main>\n        {this.state.isLoaded ? (\n          <div className=\"App\">\n            <form onSubmit={this.search}>\n              <input\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.query}\n              />\n              <button type=\"submit\">find</button>\n            </form>\n            <h1>Dynamic list of Posts</h1>\n            <PostsList posts={this.state.posts} />\n          </div>\n        ) : (\n          <button\n            className=\"btn\"\n            type=\"submit\"\n            disabled={this.state.isLoading}\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n      </main>\n    );\n  }\n}\npropTypes.state = propTypes;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}